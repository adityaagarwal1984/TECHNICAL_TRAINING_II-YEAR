import java.util.HashMap;

/**
 * The Solution class provides a method to find the first non-repeating character
 * in a given string and return its index. If no unique character exists, it returns -1.
 */
class Solution {

    /**
     * Finds the index of the first unique character in the given string.
     * 
     * @param s The input string.
     * @return The index of the first non-repeating character, or -1 if none exists.
     */
    public int firstUniqChar(String s) {
        // Create a HashMap to store character frequencies
        HashMap<Character, Integer> count = new HashMap<>();
        int n = s.length();

        // Build a frequency map: store each character and its occurrence count
        for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            count.put(c, count.getOrDefault(c, 0) + 1);
        }

        // Iterate again to find the first character with a frequency of 1
        for (int i = 0; i < n; i++) {
            if (count.get(s.charAt(i)) == 1) {
                return i; // Return the index of the first unique character
            }
        }

        // Return -1 if no unique character is found
        return -1;
    }
}

